name: ci-tests

on:
  pull_request:
    branches:
      - "main"

jobs:
  codecov:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    name: Codecov Workflow
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - id: setup_python
        uses: actions/setup-python@master
        with:
          python-version: '3.8'

      - id: cache-modules
        uses: actions/cache@v3
        with:
          path: ./.venv/
          key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install reqs
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          python -m venv ./.venv
          . ./.venv/bin/activate
          python setup.py install

      - name: Running tests
        run: |
          . ./.venv/bin/activate
          pip install pytest pytest-cov
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests

      - name: Generate docs coverage report
        id: docstr-cov
        run: |
          pip install docstr-coverage
          docstr-coverage ./ -b ./badge.svg -F 0

      - name: Create docstr-cov Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 795da6a637bad59359139e00277c97a3
          filename: test.json
          label: Hello
          message: World
          color: orange




